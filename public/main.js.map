{"version":3,"sources":["./src/app/component/guard/auth.guard.ts","./src/environments/environment.ts","./src/app/component/home/home.component.ts","./src/app/component/home/home.component.html","./src/app/component/services/word.service.ts","./src/app/component/word/word.component.ts","./src/app/component/word/word.component.html","./src/app/component/models/word.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/login/login.component.ts","./src/app/component/login/login.component.html","./src/app/component/services/user.service.ts","./src/app/component/register/register.component.ts","./src/app/component/register/register.component.html","./src/app/component/profile/profile.component.ts","./src/app/component/profile/profile.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private userService: UserService, private router: Router) {\n    }\n\n    canActivate(): boolean {\n        if (this.userService.isLoggedIn()) {\n            return true;\n        } else {\n            this.router.navigate(['./login'])\n            return false\n        }\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, HostListener, AfterViewInit, ViewChild, ChangeDetectorRef } from '@angular/core';\n\nimport { UserService } from '../services/user.service';\nimport { Word } from '../models/word.model';\nimport { WordService } from '../services/word.service';\nimport { MdbTableDirective, MdbTablePaginationComponent } from 'angular-bootstrap-md';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { faStar } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as faSolidStar } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n    @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n    @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n\n    allUsers: any = [];\n    allWords: any = [];\n    favWords = [];\n    headElements = ['Word', 'Fav', 'Noun', 'Verb', 'Adjective'];\n    searchText: string = '';\n    previous: string;\n    userId: string;\n    randomWord: string;\n    faStar = faStar;\n    faSolidStar = faSolidStar;\n\n    @HostListener('input') oninput() {\n        this.searchItems();\n    }\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(private userService: UserService, private wordService: WordService, private cdRef: ChangeDetectorRef) { }\n    user: object;\n    word: string;\n\n    ngOnInit(): void {\n        this.getAllWords();\n        this.getUserProfile();\n        this.getAlLUser();\n    }\n\n    getAllWords() {\n        this.wordService.getAllWords().subscribe(words => {\n            this.allWords = words['allWords'];\n            this.mdbTable.setDataSource(this.allWords);\n            this.previous = this.mdbTable.getDataSource();\n            this.getRandomWord()\n        }, err => {\n            console.log(err);\n        })\n    }\n\n    getRandomWord() {\n        const max = this.allWords.length;\n        const randomNumber = Math.floor(Math.random() * max + 1);\n        this.randomWord = this.allWords[randomNumber]['word'];\n    }\n\n    getUserProfile() {\n        this.userService.getProfile().subscribe(profile => {\n            this.userId = profile['user']['_id'];\n            this.favWords = profile['user']['favWords'].map(word => { return word.word });\n\n        })\n    }\n\n    ngAfterViewInit() {\n        this.mdbTablePagination.setMaxVisibleItemsNumberTo(3);\n        this.mdbTablePagination.calculateFirstItemIndex();\n        this.mdbTablePagination.calculateLastItemIndex();\n        this.cdRef.detectChanges();\n    }\n\n    addWord() {\n        const newWord = new Word();\n        newWord.userId = this.userId;\n        newWord.word = this.word;\n        this.wordService.addNewWord(newWord).subscribe(res => {\n            if (res['success']) {\n                window.location.reload();\n            } err => {\n                console.log(err)\n            }\n        })\n        this.getAllWords();\n    }\n    searchItems() {\n        const prev = this.mdbTable.getDataSource();\n        if (!this.searchText) {\n            this.mdbTable.setDataSource(this.previous);\n            this.allWords = this.mdbTable.getDataSource();\n        }\n        if (this.searchText) {\n            this.allWords = this.mdbTable.searchLocalDataBy(this.searchText);\n            this.mdbTable.setDataSource(prev);\n        }\n    }\n\n    toggleFavWord(word) {\n        const favWord = new Word();\n        favWord.userId = this.userId;\n        favWord.word = word\n        if (this.favWords.includes(word)) {\n            this.userService.removeFavWord(favWord).subscribe(res => {\n                if (res['success']) {\n                }\n            }, err => {\n                console.log(err)\n            })\n        } else {\n            this.userService.favWord(favWord).subscribe(res => {\n                if (res['success']) {\n                    this.getUserProfile()\n                }\n            }, err => {\n                console.log(err)\n            })\n        }\n    }\n\n    isFavWord(word) {\n        return this.favWords.includes(word)\n    }\n\n    getAlLUser() {\n        this.userService.getAllUser().subscribe(users => {\n            this.allUsers = users;\n        }, err => {\n            console.log(err)\n        })\n    }\n\n    isOwnProfile(user) {\n        return user.userId === this.userId\n    }\n}","<div class=\"backgroundImage\">\n  <div class=\"row\">\n    <div class=\"col-6 parent\">\n\n      <div class=\"table-wrapper\">\n        <div class=\"md-form margin-bottom-10\">\n          <input type=\"text\" [(ngModel)]=\"searchText\" class=\"form-control margin-left-15\" id=\"search\" mdbInput />\n          <label class=\"margin-left-15\" for=\"search\"> Search</label>\n        </div>\n        <table mdbTable #tableEl=\"mdbTable\" class=\"z-depth-1\">\n          <thead>\n            <tr>\n              <th *ngFor=\"let head of headElements; let i = index\" scope=\"col\">\n                {{head}}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let word of allWords; let i = index\">\n              <th *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\" scope=\"row\">\n                <a routerLink=\"/word/{{ word.word }}\">\n                  {{ word.word }}\n                </a></th>\n              <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                <button class=\"no-button-styling\" (click)=\"toggleFavWord(word.word)\">\n                  <fa-icon [icon]=\"isFavWord(word.word)? faSolidStar : faStar\"\n                    [className]=\"isFavWord(word.word)? 'fav' : 'notfav'\"></fa-icon>\n                </button>\n              </td>\n              <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                {{word.noun?.definition}}</td>\n              <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                {{word.verb?.definition}}</td>\n              <td *ngIf=\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\">\n                {{word.adjective?.definition}}</td>\n            </tr>\n            <tr *ngIf=\"allWords.length == 0\">\n              <td> Oh no, no words have been added to your word index </td>\n            </tr>\n          </tbody>\n          <tfoot class=\"grey lighten-5 w-100\">\n            <tr>\n              <td colspan=\"8\">\n                <mdb-table-pagination [tableEl]=\"tableEl\" [searchDataSource]=\"allWords\"></mdb-table-pagination>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n\n      </div>\n    </div>\n    <div class=\"col-6 redColor\">\n      <div class=\"right-parent\">\n        <div class=\"position-center\">\n          <a class=\"random-word\" routerLink=\"/word/{{randomWord}}\">\n            {{ randomWord }}\n          </a>\n        </div>\n        <div class=\"wrapper\">\n          <input type=\"word\" name=\"word\" [(ngModel)]=\"word\" class=\"form-control addInput\" placeholder=\"Add a Word\" />\n          <button (click)=\"addWord()\" class=\"btn no-button-styling addButton\">\n\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Word } from '../models/word.model';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WordService {\n\n    constructor(private http: HttpClient) { }\n\n    addNewWord(newWord: Word) {\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/json',\n        });\n        const body = JSON.stringify(newWord)\n        return this.http.post('/word/addWord', body, { headers: headers });\n    }\n\n    getToken() {\n        return localStorage.getItem('jwt')\n    }\n\n    getAllWords() {\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/json',\n            Authorization: this.getToken()\n        });\n        return this.http.get('/word/allWords', { headers: headers })\n    }\n\n    getWordDefinition(word) {\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/json',\n            Authorization: this.getToken()\n        });\n\n        return this.http.get('/word/' + word, { headers: headers })\n\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { WordService } from '../services/word.service';\nimport { Router } from '@angular/router';\nimport { IWordDef } from '../models/wordDef.model';\nimport { Location } from '@angular/common';\n\n\n@Component({\n    selector: 'app-word',\n    templateUrl: './word.component.html',\n    styleUrls: ['./word.component.scss']\n})\nexport class WordComponent implements OnInit {\n    word: string;\n    wordDefinition: IWordDef;\n    constructor(private wordService: WordService, private router: Router, protected location: Location) { }\n\n    ngOnInit(): void {\n        this.getWordFromUrl();\n        this.getWord();\n    }\n\n    getWordFromUrl() {\n        const url = this.router.url;\n        var splitUrl = url.split('/');\n        this.word = splitUrl[2];\n    }\n\n    getWord() {\n        this.wordService.getWordDefinition(this.word).subscribe(wordInfo => {\n            if (wordInfo['success']) {\n                this.wordDefinition = wordInfo['word']\n            }\n        })\n    }\n\n    back() {\n        this.location.back();\n    }\n\n\n\n}\n","<div class=\"backgroundImage\">\n  <div class=\"row\">\n    <div class=\"col-9 text\">\n      <h1> {{wordDefinition?.word}}</h1>\n      <div *ngIf=\"wordDefinition?.noun\">\n        <p>Noun:\n          {{wordDefinition.noun.definition}}\n        </p>\n        <p>\n          Example:\n          {{wordDefinition.noun.example}}\n        </p>\n      </div>\n      <div *ngIf=\"wordDefinition?.adjective\">\n        <p>Adjective:\n          {{wordDefinition.adjective.definition}}\n        </p>\n        <p>\n          Example:\n          {{wordDefinition.adjective.example}}\n        </p>\n      </div>\n      <div *ngIf=\"wordDefinition?.verb\">\n        <p>Verb:\n          {{wordDefinition.verb.definition}}\n        </p>\n        <p>\n          Example:\n          {{wordDefinition.verb.example}}\n        </p>\n      </div>\n      <button (click)=\"back()\">\n        Back\n      </button>\n\n    </div>\n  </div>\n</div>\n","export class Word {\n    userId: string;\n    word: string;\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<img class=\"center\" src=\"../assets/logo.png\" width=\"775\" height=\"125\">\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserService } from './component/services/user.service';\nimport { WordService } from './component/services/word.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './component/home/home.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { AuthGuard } from './component/guard/auth.guard';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ProfileComponent } from './component/profile/profile.component';\nimport { WordComponent } from './component/word/word.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        RegisterComponent,\n        HomeComponent,\n        ProfileComponent,\n        WordComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        MatButtonModule,\n        MDBBootstrapModule.forRoot(),\n        NoopAnimationsModule,\n        MatIconModule,\n        MatInputModule,\n        FontAwesomeModule,\n\n    ],\n    providers: [UserService, WordService, AuthGuard],\n\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../services/user.service';\n\nimport { Router } from '@angular/router';\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    @ViewChild('alert', { static: false }) alert: ElementRef;\n\n    // Flags\n    loginForm: FormGroup\n    submitted: boolean;\n\n    errorMessage: string;\n\n    constructor(private router: Router, private userService: UserService) { }\n\n    ngOnInit(): void {\n        this.createForm();\n    }\n\n    // Convenient getter to get access to form control\n    get f() { return this.loginForm.controls; }\n\n    // Create login Form\n    createForm(): void {\n        this.loginForm = new FormGroup({\n            email: new FormControl('', [Validators.required, Validators.email]),\n            password: new FormControl('', Validators.required)\n        });\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        if (this.loginForm.valid) {\n            this.userService.loginUser(this.loginForm.value).subscribe(\n                (res) => {\n                    if (res[\"success\"]) {\n                        this.userService.storeUserData(res['token'])\n                        this.router.navigate(['/home']);\n\n                    } else {\n                        this.errorMessage = res['message']\n                        this.resetForm();\n                    }\n                },\n                (err) => {\n                    console.log(err)\n                })\n        }\n    }\n\n    resetForm() {\n        this.loginForm.reset();\n        this.submitted = false;\n    }\n\n    // Close notification message\n    closeAlert() {\n        this.alert.nativeElement.classList.remove('show');\n    }\n}\n","<div class=\"container\">\n  <div *ngIf=\"errorMessage\" #alert class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeAlert()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <p>{{errorMessage}}</p>\n  </div>\n\n  <!--Form login -->\n  <form class=\"text-center border border-light p-5\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n\n    <p class=\"h4 mb-4\">Sign in</p>\n\n    <!-- Email -->\n    <input class=\"form-control\" formControlName=\"email\" type=\"email\" name=\"email\" class=\"form-control mb-4\"\n      placeholder=\"Email\">\n\n    <div *ngIf=\"submitted && f.email.invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"f.email.errors.required\">\n        Please enter an Email\n      </div>\n      <div *ngIf=\"f.email.errors.email\">\n        Please enter a valid Email address\n      </div>\n    </div>\n\n\n    <!-- Password -->\n    <input formControlName=\"password\" required type=\"password\" id=\"defaultLoginFormPassword\" class=\"form-control mb-4\"\n      placeholder=\"Password\">\n    <div *ngIf=\"submitted && loginForm.controls['password'].invalid\" class=\"alert alert-danger\">\n      <div *ngIf=\"loginForm.controls['password'].errors.required\">\n        Password is required.\n      </div>\n    </div>\n\n    <!-- Sign in button -->\n    <button mdbBtn color=\"info\" block=\"true\" class=\"my-4\" type=\"submit\">Sign in</button>\n\n    <!-- Register -->\n    <p>Not a member?\n      <a routerLink=\"/register\">Register</a>\n    </p>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Word } from '../models/word.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n\n    constructor(private http: HttpClient) { }\n\n    loginUser(user) {\n        let headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this.http.post('/user/login', user, { headers: headers });\n    }\n\n    storeUserData(token) {\n        localStorage.setItem('jwt', token);\n    }\n\n    registerUser(user) {\n        let headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this.http.post('/user/register', user, { headers: headers });\n    }\n\n    isLoggedIn(): boolean {\n        const helper = new JwtHelperService();\n        let token = localStorage.getItem('jwt')\n        if (token) {\n            return !helper.isTokenExpired(token.split(' ')[1]);\n        } else false;\n    }\n\n    logout() {\n        localStorage.clear()\n    }\n\n    getToken() {\n        return localStorage.getItem('jwt')\n    }\n\n    getProfile() {\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/json',\n            Authorization: this.getToken()\n        });\n        return this.http.get('/user/profile/', { headers: headers })\n    }\n\n    getUsersProfile(userId) {\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/json',\n            Authorization: this.getToken()\n        });\n        return this.http.get('/user/profile/' + userId, { headers: headers })\n    }\n\n    favWord(favWord: Word) {\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/json',\n        });\n        const body = JSON.stringify(favWord);\n        return this.http.post('/user/favWord', body, { headers: headers });\n    }\n\n\n    removeFavWord(favWord: Word) {\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/json',\n        });\n        const body = JSON.stringify(favWord);\n        return this.http.post('/user/favWord/remove', body, { headers: headers });\n    }\n\n    getAllUser() {\n        let headers = new HttpHeaders({\n            'Content-Type': 'application/json',\n            Authorization: this.getToken()\n        });\n        return this.http.get('/user/allUsers', { headers: headers })\n    }\n\n}\n","import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    @ViewChild('alert', { static: false }) alert: ElementRef;\n\n    registerForm: FormGroup;\n    submitted: boolean;\n    validMessage: string;\n    success: boolean;\n    hide = true;\n    constructor(private userService: UserService, private router: Router) { }\n\n    ngOnInit(): void {\n        this.createForm()\n    }\n\n    // Create register form\n    createForm(): void {\n        this.registerForm = new FormGroup({\n            email: new FormControl('', [Validators.required, Validators.email]),\n            password: new FormControl('', [\n                Validators.required,\n            ]),\n            username: new FormControl('', Validators.required)\n        })\n        this.submitted = false;\n    };\n\n    // Close notification message\n    closeAlert() {\n        this.alert.nativeElement.classList.remove('show');\n    }\n\n    // Convience getter to get access to form control\n    get f() { return this.registerForm.controls; }\n\n    onSubmit(): void {\n        this.submitted = true;\n        // If form is valid \n        if (this.registerForm.valid) {\n            // Send form off to API\n            this.userService.registerUser(this.registerForm.value).subscribe(\n                (res) => {\n                    this.success = true;\n                    this.validMessage = \"Successfull Registration, redirecting to login page\"\n                    // On success set submitted to false and clear form\n                    this.resetForm();\n                },\n                (error) => {\n                    this.success = false;\n                    this.validMessage = \"Sorry you were not registrated\"\n\n                    if (error.status === 409) {\n                        this.validMessage = \"Sorry this email has already been used, register again\";\n                        this.success = false;\n                    }\n                });\n        }\n    }\n\n    resetForm() {\n        this.registerForm.reset();\n        this.submitted = false;\n        this.success = false;\n        setTimeout(() => {\n            this.router.navigate(['/login'])\n\n        }, 3000)\n    }\n\n}\n","<div class=\"container\">\n  <div *ngIf=\"!success && validMessage\" #alert class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeAlert()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <p>{{ validMessage }}</p>\n  </div>\n\n  <div class=\"card\">\n    <!-- Default form register -->\n    <form class=\"text-center border border-light p-5\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n\n\n      <p class=\"h4 mb-4\">Sign up</p>\n      <!-- Username -->\n      <div class=\"form-group\">\n        <input type=\"username\" required formControlName=\"username\" class=\"form-control mb-4\" placeholder=\"Username\">\n        <div *ngIf=\"submitted && f.username.invalid \" class=\"alert alert-danger\">\n          <div *ngIf=\"f.username.errors.required\">\n            Username is required.\n          </div>\n        </div>\n      </div>\n      <!-- E-mail -->\n      <div class=\"form-group\">\n        <input type=\"text\" required class=\"form-control mb-4\" formControlName=\"email\" placeholder=\"E-mail\">\n        <div *ngIf=\"submitted && f.email.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.email.errors.required\">\n            Email is required\n          </div>\n          <div *ngIf=\"f.email.errors.email\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"form-group\">\n        <div class=\"row\">\n          <div class=\"col-11 noPadding\">\n            <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\" required\n              class=\"form-control \" formControlName=\"password\" placeholder=\"Password\">\n          </div>\n          <div class=\"col-1 eyeButton\">\n            <button mat-icon-button (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n              [attr.aria-pressed]=\"hide\">\n              <mat-icon matSuffix>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n          </div>\n        </div>\n\n        <small id=\"defaultRegisterFormPasswordHelpBlock\" class=\"form-text text-muted mb-4\">\n          At least 6 characters\n        </small>\n        <div *ngIf=\"submitted && f.password.invalid\" class=\"alert alert-danger\">\n          <div *ngIf=\"f.password.errors.required\">\n            Password is required\n          </div>\n          <div *ngIf=\"f.password.errors.minlength\">\n            Password is too short\n          </div>\n        </div>\n      </div>\n      <!-- Sign up button -->\n      <button class=\"btn btn-info my-4 btn-block\" type=\"submit\">Sign in</button>\n\n      <!-- Register -->\n      <p>Already a member?\n        <a routerLink=\"/login\">Login</a>\n      </p>\n\n    </form>\n    <!-- Default form register -->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { IUser } from '../models/user.model';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n    user: IUser;\n    id: string;\n\n    constructor(private userService: UserService, private route: ActivatedRoute) { }\n\n    ngOnInit(): void {\n        this.getUserId();\n        if (this.id) {\n            this.getUserDetails(this.id);\n        }\n    }\n\n    getUserId() {\n        this.route.params.subscribe(params => {\n            this.id = params['userId'];\n\n        });\n    }\n    getUserDetails(id) {\n        this.userService.getUsersProfile(id).subscribe(profile => {\n            this.user = profile['user'];\n        })\n    }\n\n}\n","<div class=\"container\">\n  <h1>Hello {{user?.username}}</h1>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <h4>\n        Favourite words\n      </h4>\n      <li *ngFor=\"let favWord of user?.favWords\">\n        <a routerLink=\"/word/{{ favWord.word }}\">\n          {{ favWord.word }}\n        </a>\n      </li>\n    </div>\n    <div class=\" col-6\">\n      <h4>\n        Added added\n      </h4>\n      <li *ngFor=\"let addedWord of user?.addedWords\">\n        <a routerLink=\"/word/{{ addedWord.word }}\">\n          {{ addedWord.word }}\n        </a>\n      </li>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './component/login/login.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { AuthGuard } from './component/guard/auth.guard';\nimport { ProfileComponent } from './component/profile/profile.component';\nimport { WordComponent } from './component/word/word.component';\n\nconst routes: Routes = [\n    { path: 'login', component: LoginComponent },\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\n    { path: 'register', component: RegisterComponent },\n    { path: 'word/:word', component: WordComponent, canActivate: [AuthGuard] },\n    { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n    { path: 'profile/:userId', component: ProfileComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}